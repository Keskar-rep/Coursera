%% Segment an Image into Muliple Labels

img = imread('Puzzle_06.jpg');

%% Copy the code from here till the end

HSV = rgb2hsv(img);

[BW,maskedImage] = BlackWhiteConverter(img);
imshow(BW)

chipmask = HSV(:,:,2) > 0.3;
HSVchip = HSV;
HSVchip(~repmat(chipmask,1,1,3)) = 0;
imshow(hsv2rgb(HSVchip))

K = 3;
labels = imsegkmeans(im2single(HSVchip),K);
imshow(label2rgb(labels))

function [BW,maskedImage] = BlackWhiteConverter(RGB)
%segmentImage Segment image using auto-generated code from Image Segmenter app
%  [BW,MASKEDIMAGE] = segmentImage(RGB) segments image RGB using
%  auto-generated code from the Image Segmenter app. The final segmentation
%  is returned in BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 10-Oct-2024
%----------------------------------------------------



% Threshold image with adaptive threshold
BW = imbinarize(im2gray(RGB), 'adaptive', 'Sensitivity', 0.500000, 'ForegroundPolarity', 'bright');

% Open mask with default
radius = 3;
decomposition = 8;
se = strel('disk', radius, decomposition);
BW = imopen(BW, se);

% Dilate mask with default
radius = 2;
decomposition = 0;
se = strel('disk', radius, decomposition);
BW = imdilate(BW, se);

% Create masked image.
maskedImage = RGB;
maskedImage(repmat(~BW,[1 1 3])) = 0;
end